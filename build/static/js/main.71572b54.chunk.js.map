{"version":3,"sources":["images sync /^/.//.*$","images/character1.jpg","images/character10.jpg","images/character11.jpg","images/character12.jpg","images/character2.jpg","images/character3.jpg","images/character4.jpg","images/character5.jpg","images/character6.jpg","images/character7.jpg","images/character8.jpg","images/character9.jpg","images/gravel/gravel.png","images/gravel/readme.txt","images/yucel-moran-1362376-unsplash.jpg","components/Card/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["map","./character1.jpg","./character10.jpg","./character11.jpg","./character12.jpg","./character2.jpg","./character3.jpg","./character4.jpg","./character5.jpg","./character6.jpg","./character7.jpg","./character8.jpg","./character9.jpg","./gravel/gravel.png","./gravel/readme.txt","./yucel-moran-1362376-unsplash.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","GameCard","props","react_default","a","createElement","className","onClick","imageClick","alt","image","replace","src","require","Wrapper","children","Header","App","state","characters","shuffleCards","_this","filter","setState","components_Wrapper","components_Header","this","components_Card","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kiBAAA,IAAAA,EAAA,CACAC,mBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,oBAAA,GACAC,mBAAA,GACAC,mBAAA,GACAC,mBAAA,GACAC,mBAAA,GACAC,mBAAA,GACAC,mBAAA,GACAC,mBAAA,GACAC,mBAAA,GACAC,sBAAA,GACAC,sBAAA,GACAC,qCAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAC,EAAAlB,EAAAiB,GACA,KAAAC,EAAA,IACA,IAAAG,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAEA,MADAI,EAAAE,KAAA,mBACAF,EAEA,OAAAH,EAEAF,EAAAQ,KAAA,WACA,OAAAC,OAAAD,KAAAxB,IAEAgB,EAAAU,QAAAP,EACAQ,EAAAC,QAAAZ,EACAA,EAAAE,GAAA,oBCrCAS,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,yDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,oDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,oDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,uNCazBC,MAVf,SAAkBC,GACd,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAASL,EAAMM,YACjCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,OAAKI,IAAKP,EAAMQ,MAAMC,QAAQ,OAAQ,IAAKC,IAAKC,MAAQ,KAAkBX,EAAMQ,yBCA7EI,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCG1BC,MAJf,SAAgBd,GACZ,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUJ,EAAMa,WC8B1BE,6MA3BbC,MAAQ,CACNC,gBAIJC,aAAe,SAAA/B,GACb,IAAM8B,EAAaE,EAAKH,MAAMC,WAAWG,OAAO,SAAAH,GAAU,OAAIA,EAAW9B,KAAOA,IAChFgC,EAAKE,SAAS,CAAEJ,wFAIhB,OACEhB,EAAAC,EAAAC,cAACmB,EAAD,KACErB,EAAAC,EAAAC,cAACoB,EAAD,oBACAtB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,eACfoB,KAAKR,MAAMC,WAAWhD,IAAI,SAAAgD,GAAU,OACnChB,EAAAC,EAAAC,cAACsB,EAAD,CACAtC,GAAI8B,EAAW9B,GACfqB,MAAOS,EAAWT,mBAnBRkB,aCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhC,EAAAC,EAAAC,cAAC+B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.71572b54.chunk.js","sourcesContent":["var map = {\n\t\"./character1.jpg\": 18,\n\t\"./character10.jpg\": 19,\n\t\"./character11.jpg\": 20,\n\t\"./character12.jpg\": 21,\n\t\"./character2.jpg\": 22,\n\t\"./character3.jpg\": 23,\n\t\"./character4.jpg\": 24,\n\t\"./character5.jpg\": 25,\n\t\"./character6.jpg\": 26,\n\t\"./character7.jpg\": 27,\n\t\"./character8.jpg\": 28,\n\t\"./character9.jpg\": 29,\n\t\"./gravel/gravel.png\": 30,\n\t\"./gravel/readme.txt\": 31,\n\t\"./yucel-moran-1362376-unsplash.jpg\": 32\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 17;","module.exports = __webpack_public_path__ + \"static/media/character1.6673a3a9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/character10.a05ce282.jpg\";","module.exports = __webpack_public_path__ + \"static/media/character11.6f69c5e0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/character12.4a9e6798.jpg\";","module.exports = __webpack_public_path__ + \"static/media/character2.2ccafebb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/character3.96199ab2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/character4.a43aba40.jpg\";","module.exports = __webpack_public_path__ + \"static/media/character5.ab4977c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/character6.e0a0fc66.jpg\";","module.exports = __webpack_public_path__ + \"static/media/character7.3a3763e6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/character8.875a17de.jpg\";","module.exports = __webpack_public_path__ + \"static/media/character9.02e6de2d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gravel.6eda72ff.png\";","module.exports = __webpack_public_path__ + \"static/media/readme.d1a0d6c6.txt\";","module.exports = __webpack_public_path__ + \"static/media/yucel-moran-1362376-unsplash.1e4fdd1a.jpg\";","import React from \"react\";\nimport \"./Card.css\";\n\nfunction GameCard(props) {\n    return (\n        <div className=\"card\" onClick={props.imageClick}>\n            <div className=\"img-container\">\n            <img alt={props.image.replace(\".jpg\", \"\")} src={require(\"../../images/\" + props.image)} />\n            </div>\n        </div>\n    );\n}\n\nexport default GameCard;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Header.css\";\n\nfunction Header(props) {\n    return <h1 className=\"header\">{props.children}</h1>;\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport GameCard from \"./components/Card\"\nimport characters from \"./gamecards.json\"\nimport Wrapper from \"./components/Wrapper\"\nimport Header from \"./components/Header\"\n\nclass App extends Component {\n  state = {\n    characters\n  }\n\n\nshuffleCards = id => {\n  const characters = this.state.characters.filter(characters => characters.id !== id);\n  this.setState({ characters });\n};\n\nrender () {\n  return (\n    <Wrapper>\n      <Header>Clicky Game</Header>\n      <div className={\"gameCardDiv\"}>\n      {this.state.characters.map(characters => (\n        <GameCard\n        id={characters.id}\n        image={characters.image}\n        />\n      ))}\n      </div>\n    </Wrapper>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}